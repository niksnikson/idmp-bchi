fit_pressure3 <- val(mass ~ triceps + diabetes + pressure, db, 5)
fit_pressure3
fit_insulin3 <- val(mass ~ triceps + diabetes + insulin, db, 5)
fit_insulin3
fit_glucose3 <- val(mass ~ triceps + diabetes + glucose, db, 5)
fit_glucose3
fit_insulin4 <- val(mass ~ triceps + diabetes + pressure + insulin, db, 5)
fit_insulin4
fit_glucose4 <- val(mass ~ triceps + diabetes + pressure + glucose, db, 5)
fit_glucose4
fits_rmse <- tibble(nvar = 1:4,
rmse = c(fit_triceps1, fit_diabetes2, fit_pressure3, fit_insulin4))
ggplot(fits_rmse) + geom_line(aes(x=nvar, y=rmse))
ans <- val(mass ~ triceps + pressure, db, 5)
ans
data <- as_tibble(read.csv("../StudentsPerformance.csv"))
data
ggplot(data) + geom_bar(aes(x =`math score\`, fill = gender))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x =`math score`, fill = gender))
data <- as_data.rame(read.csv("../StudentsPerformance.csv"),)
data <- as_data.rame(read.csv("../StudentsPerformance.csv"),check.names=FALSE,stringsAsFactors=FALSE)
data <- as_data.frame(read.csv("../StudentsPerformance.csv"),check.names=FALSE,stringsAsFactors=FALSE)
data <- as.data.frame(read.csv("../StudentsPerformance.csv"),check.names=FALSE,stringsAsFactors=FALSE)
data
sp_data <- read_csv("../StudentsPerformance.csv")
sp_df <- data.frame(sp_data, check.names=FALSE,stringsAsFactors=FALSE)
data <- tibble(sp_df)
data
data
print(data)
sp_data <- read_csv("../StudentsPerformance.csv")
sp_df <- data.frame(sp_data, check.names=FALSE,stringsAsFactors=FALSE)
data <- tibble(sp_df)
print(data)
View(data)
View(data)
ggplot(data) + geom_bar(aes(x ='math score', fill = gender))
sp_data <- read_csv("../StudentsPerformance.csv")
View(PimaIndiansDiabetes2)
View(sp_data)
data <- tibble(sp_data)
print(data)
sp_df <- data.frame(sp_data, check.names=FALSE,stringsAsFactors=FALSE)
View(sp_df)
sp_df
data <- data.frame(sp_data, check.names=FALSE,stringsAsFactors=FALSE)
ggplot(data) + geom_bar(aes(x ='math score', fill = gender))
ggplot(data) + geom_bar(aes(x ='math score', fill = gender))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x ='math score', fill = gender))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x ='math score', fill = gender))
ggplot(data) + geom_histogram(aes(x ='math score', fill = gender))
ggplot(data) + geom_bar(aes(x ='math score', fill = gender))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x =`math score`, fill = gender))
ggplot(data) + geom_bar(aes(x =`math score`, fill = gender))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x =`math score`, fill = gender))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x =`math score`, fill = gender))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `test preparation course`), position = "dodge")
data <- tibble(data)
ggplot(data) + geom_bar(aes(x =`math score`, fill = gender))
ggplot(data=data) + geom_bar(aes(x =`math score`, fill = gender))
ggplot(data=data) + geom_bar(aes(x ='math score', fill = gender))
ggplot(data=data) + geom_bar(aes(x ='math score', fill = data.gender))
ggplot(data=data) + geom_bar(aes(x ='math score', fill = data$gender))
ggplot(data=data) + geom_bar(aes(x =`math score`, fill = data$gender))
ggplot(data=data) + geom_bar(aes(x =`data$math score`, fill = data$gender))
ggplot(data=data) + geom_bar(aes(x =data$math score, fill = data$gender))
ggplot(data=data) + geom_bar(aes(x ='data$math score', fill = data$gender))
ggplot(data=data) + geom_bar(aes(x =`data$math score`, fill = data$gender))
ggplot(data=data) + geom_bar(aes(x =`math score`, fill = data$gender))
data <- data.frame(sp_data, check.names=FALSE,stringsAsFactors=FALSE)
ggplot(data=data) + geom_bar(aes(x =`math score`, fill = data$gender))
ggplot(data=data) + geom_bar(aes(x =`math score`, fill = gender))
ggplot(data=data) + geom_bar(aes(x =`math score`, fill = gender))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `test preparation course`), position = "dodge")
data
data <- data.frame(sp_data, check.names=FALSE,stringsAsFactors=FALSE)
ggplot(data=data) + geom_bar(aes(x =`math score`, fill = gender))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `test preparation course`), position = "dodge")
library("tidyverse")
library("dplyr")
library("mlbench")
library("modelr")
sp_data <- read_csv("../StudentsPerformance.csv")
data <- data.frame(sp_data, check.names=FALSE,stringsAsFactors=FALSE)
data
ggplot(data=data) + geom_bar(aes(x =`math score`, fill = gender))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `test preparation course`), position = "dodge")
print(ggplot(data=data) + geom_bar(aes(x =`math score`, fill = gender)))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `test preparation course`), position = "dodge")
p1 <- ggplot(data=data) + geom_bar(aes(x =`math score`, fill = gender))
print(p1)
ggplot(data) + geom_bar(aes(x = `reading score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `test preparation course`), position = "dodge")
p1 <- ggplot(data=data) + geom_bar(aes(x =`math score`, fill = gender))
print(p1)
ggplot(data) + geom_bar(aes(x = `reading score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = gender), position = "dodge")
p1 <- ggplot(data=data) + geom_bar(aes(x ='math score', fill = gender))
print(p1)
p1 <- ggplot(data=data) + geom_bar(aes(x ='math score', fill = gender))
print(p1)
ggplot(data=data) + geom_bar(aes(x =`math score`, fill = gender))
ggplot(data=data) + geom_bar(aes(x =`math score`, fill = gender))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `test preparation course`), position = "dodge")
library("tidyverse")
library("dplyr")
library("mlbench")
library("modelr")
ggplot(data, aes(x = charges)) + geom_histogram(fill = 'purple') +
xlab('Medical expense of a family') + ggtitle('Expense of a family')
ggplot(data=data) + geom_bar(aes(x =`math score`, fill = gender))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `test preparation course`), position = "dodge")
ggplot(data=data) + geom_bar(aes(x =`math score`, fill = gender))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = gender), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `race/ethnicity`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `parental level of education`))
ggplot(data) + geom_bar(aes(x = `math score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = lunch), position = "dodge")
ggplot(data) + geom_bar(aes(x = `math score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `reading score`, fill = `test preparation course`), position = "dodge")
ggplot(data) + geom_bar(aes(x = `writing score`, fill = `test preparation course`), position = "dodge")
install.packages("xgboost")
library(tidyverse)
library(olsrr)
library(purrr)
library(modelr)
library(e1071)
library(caTools)
library(randomForest)
library(caret)
library(data.table)
library(mlr)
install.packages('mlr')
library(mlr)
setwd("~/GitHub/idmp-bchi/CDA + ML")
# load data
data <- read.csv("../Data/heart.csv")
data <- data.frame(data, check.names=FALSE, stringsAsFactors=FALSE)
#format col name
names(data)[1] <- 'age'
#set seed
set.seed(1)
#xgboost
split = sample.split(data$target, SplitRatio = 0.8)
train = subset(data, split == TRUE)
test = subset(data, split == FALSE)
#convert data frame to data table
setDT(train)
setDT(test)
View(train)
#using one hot encoding
labels <- train$target
ts_label <- test$target
new_tr <- model.matrix(~.+0,data = train[,-c("target"),with=F])
new_ts <- model.matrix(~.+0,data = test[,-c("target"),with=F])
#convert factor to numeric
labels <- as.numeric(labels)-1
ts_label <- as.numeric(ts_label)-1
#preparing matrix
dtrain <- xgb.DMatrix(data = new_tr,label = labels)
dtest <- xgb.DMatrix(data = new_ts,label=ts_label)
library(xgboost)
#preparing matrix
dtrain <- xgb.DMatrix(data = new_tr,label = labels)
dtest <- xgb.DMatrix(data = new_ts,label=ts_label)
#default parameters
params <- list(booster = "gbtree", objective = "binary:logistic",
eta=0.3, gamma=0, max_depth=6, min_child_weight=1,
subsample=1, colsample_bytree=1)
xgbcv <- xgb.cv( params = params, data = dtrain, nrounds = 100,
nfold = 5, showsd = T, stratified = T,
print.every.n = 10, early.stop.round = 20, maximize = F)
xgbcv <- xgb.cv( params = params, data = dtrain, nrounds = 100,
nfold = 5, showsd = T, stratified = T,
print_every_n = 10, early_stop_round = 20, maximize = F)
View(new_tr)
View(new_ts)
View(params)
dtrain
xgbcv <- xgb.cv( params = params, data = dtrain, nrounds = 100,
nfold = 5, showsd = T, stratified = T,
print_every_n = 10, early_stop_round = 20, maximize = F)
xgbcv <- xgb.cv( params = params, data = labels, nrounds = 100,
nfold = 5, showsd = T, stratified = T,
print_every_n = 10, early_stop_round = 20, maximize = F)
#convert factor to numeric
labels <- as.numeric(labels)-1
xgbcv <- xgb.cv( params = params, data = labels, nrounds = 100,
nfold = 5, showsd = T, stratified = T,
print_every_n = 10, early_stop_round = 20, maximize = F)
ts_label <- as.numeric(ts_label)-1
#preparing matrix
dtrain <- xgb.DMatrix(data = new_tr,label = labels)
dtest <- xgb.DMatrix(data = new_ts,label=ts_label)
#default parameters
params <- list(booster = "gbtree", objective = "binary:logistic",
eta=0.3, gamma=0, max_depth=6, min_child_weight=1,
subsample=1, colsample_bytree=1)
xgbcv <- xgb.cv( params = params, data = labels, nrounds = 100,
nfold = 5, showsd = T, stratified = T,
print_every_n = 10, early_stop_round = 20, maximize = F)
xgbcv <- xgb.cv( params = params, data = dtain, nrounds = 100,
nfold = 5, showsd = T, stratified = T,
print_every_n = 10, early_stop_round = 20, maximize = F)
xgbcv <- xgb.cv( params = params, data = dtrain, nrounds = 100,
nfold = 5, showsd = T, stratified = T,
print_every_n = 10, early_stop_round = 20, maximize = F)
labels
#convert factor to numeric
labels <- as.numeric(labels)+2
labels
ts_label
ts_label <- as.numeric(ts_label)+2
#preparing matrix
dtrain <- xgb.DMatrix(data = new_tr,label = labels)
dtest <- xgb.DMatrix(data = new_ts,label=ts_label)
#default parameters
params <- list(booster = "gbtree", objective = "binary:logistic",
eta=0.3, gamma=0, max_depth=6, min_child_weight=1,
subsample=1, colsample_bytree=1)
xgbcv <- xgb.cv( params = params, data = dtrain, nrounds = 100,
nfold = 5, showsd = T, stratified = T,
print_every_n = 10, early_stop_round = 20, maximize = F)
min(xgbcv$test.error.mean)
View(train)
View(xgbcv)
xgb1 <- xgb.train (params = params, data = dtrain, nrounds = 79,
watchlist = list(val=dtest,train=dtrain),
print.every.n = 10, early.stop.round = 10,
maximize = F , eval_metric = "error")
#model prediction
> xgbpred <- predict (xgb1,dtest)
#model prediction
xgbpred <- predict (xgb1,dtest)
xgbpred
xgbpred
xgbpred <- ifelse (xgbpred > 0.5,1,0)
xgbpred
#confusion matrix
confusionMatrix (xgbpred, ts_label)
ts_label
xgbpred
xgbpred <- as.factor(xgbpred)
xgbpred
ts_label <- as.factor(ts_label)
ts_label
#confusion matrix
confusionMatrix (xgbpred, ts_label)
#view variable importance plot
mat <- xgb.importance (feature_names = colnames(new_tr),model = xgb1)
xgb.plot.importance (importance_matrix = mat[1:20])
xgb.plot.importance (importance_matrix = mat[1:13])
# transform data
data <- transform(
data,
age=as.integer(age),
sex=as.factor(sex),
cp=as.factor(cp),
trestbps=as.integer(trestbps),
chol=as.integer(chol),
fbs=as.factor(fbs),
restecg=as.factor(restecg),
thalach=as.integer(thalach),
exang=as.factor(exang),
oldpeak=as.numeric(oldpeak),
slope=as.factor(slope),
ca=as.factor(ca),
thal=as.factor(thal),
target=as.factor(target)
)
# check class
sapply(data, class)
# split
sample = sample.split(data$target, SplitRatio = .8)
train = subset(data, sample == TRUE)
test  = subset(data, sample == FALSE)
# initialise randomforest
rf <- randomForest(
target ~ .,
data=train
)
#predict
pred = predict(rf, newdata=test[-14])
#confusion matrix
cm = table(test[,14], pred)
confusionMatrix(cm)
#------------------------------------------------------------------------#
# randonm forest using 4 vars
data_s = select(data,c('cp', 'thalach', 'exang', 'oldpeak','target'))
# split
sample = sample.split(data_s$target, SplitRatio = .8)
train1 = subset(data_s, sample == TRUE)
test1  = subset(data_s, sample == FALSE)
# initialise randomforest
rf1 <- randomForest(
target ~ .,
data=train1
)
#predict
pred1 = predict(rf1, newdata=test1[-5])
cm1
#confusion matrix
cm1 = table(test1[,5], pred1)
confusionMatrix(cm1)
classifier = randomForest(x = train1[-14],
y = train1$target,
ntree = 500, random_state = 0)
plot(classifier)
classifier = randomForest(x = train[-14],
y = train$target,
ntree = 500, random_state = 0)
plot(classifier)
classifier1 = randomForest(x = train1[-5],
y = train1$target,
ntree = 500, random_state = 0)
plot(classifier1)
#confusion matrix
confusionMatrix (xgbpred, ts_label)
# prepare training scheme
control <- trainControl(method="repeatedcv", number=10, repeats=3)
# train the model
model <- train(target~., data=data, method="lvq", preProcess="scale", trControl=control)
# train the model
model <- train(target~., data=data, method="lvq", preProcess="scale",
trControl=control)
# define the control using a random forest selection function
control <- rfeControl(functions=rfFuncs, method="cv", number=10)
# run the RFE algorithm
results <- rfe(data[,1:13], PimaIndiansDiabetes[,14], sizes=c(1:13), rfeControl=control)
# run the RFE algorithm
results <- rfe(data[,1:13], data[,14], sizes=c(1:13), rfeControl=control)
# summarize the results
print(results)
# summarize the results
print(results)
# summarize the results
print(results)
# list the chosen features
predictors(results)
# plot the results
plot(results, type=c("g", "o"))
?rfeControl
# check class
sapply(data, class)
